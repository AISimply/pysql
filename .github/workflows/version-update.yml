name: Auto Update Version

on:
    push:
        branches: '**' 
    pull_request:
        branches: '**'

jobs:
  update-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update Version
        run: |
          chmod +x ./update_version.sh
          ./update_version.sh

      - name: Commit and Push Changes
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:${TOKEN}@github.com/${{ github.repository }}.git
          git add VERSION
          git commit -m "chore: Auto-update version [skip ci]"
            git push origin HEAD:${GITHUB_REF#refs/heads/}

      - name: Tag the New Version
        if: github.ref == 'refs/heads/main' && (contains(github.event.head_commit.message, 'tag-repo') || contains(github.event.head_commit.message, 'tag-release'))
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:${TOKEN}@github.com/${{ github.repository }}.git
          VERSION=$(cat VERSION)
          git tag -a "v$VERSION" -m "Release version $VERSION"
          git push origin "v$VERSION"
      
      - name: Create Release
        if: github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, 'tag-release')
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(cat VERSION)
          curl -X POST \
            -H "Authorization: token ${TOKEN}" \
            -H "Content-Type: application/json" \
            -d '{
              "tag_name": "'${VERSION}'",
              "target_commitish": "${GITHUB_REF#refs/heads/}",
              "name": "Release '${VERSION}'",
              "body": "Auto-generated release for version '${VERSION}'.",
              "draft": false,
              "prerelease": false
            }' \
            https://api.github.com/repos/${{ github.repository }}/releases

